<!--
	This project contains target to generate the framework
  -->
<project>
	<import optional="true" file="properties.xml" />
	<import optional="true" file="dependencies.xml" />
		
	<macrodef name="generate-framework" description="Generates a framework with a specific visitor">
		<attribute name="generator" description="The visitor to generate the good framework"/>
		<attribute name="spec"      description="The specification file" default="${spec.dir}/${project.name.lowercase}.diaspec"/>
		<attribute name="package"   description="The package" default="${framework.package}"/>
		<sequential>
			<java classname="@{generator}" failonerror="yes">
				<arg file="@{spec}" />
				<arg value="-d" />
				<arg path="${src.dir}" />
				<arg value="-k" />
				<arg value="-p" />
				<arg value="@{package}" />
				<classpath>
					<fileset dir="${libs.dir}">
						<include name="**/*.jar" />
					</fileset>
				</classpath>
			</java>
		</sequential>
	</macrodef>

	<macrodef name="antlr-generate-dir" description="Sets the paths for the ANTLR generator">
		<attribute name="package"  description="The package" default="fr.inria.phoenix.${project.name.lowercase}.parser"/>
		<sequential>
			<propertyregex property="antlr.output" input="@{package}" regexp="\." replace="/"/>
			<if><not><isset property="antlr.generated"/></not><then>
				<property name="antlr.generated" value="./src/${antlr.output}/generated" />
			</then></if>
			<if><not><isset property="antlr.grammars.dir"/></not><then>
				<property name="antlr.grammars.dir" value="./resources/${antlr.output}/antlr"/>
			</then></if>
			<if><not><isset property="antlr.grammars"/></not><then>
			    <pathconvert pathsep=" " property="antlr.grammars">
			    	<scriptmapper language="javascript">
			    		self.addMappedName("'" + source + "'");
			    	</scriptmapper>
		    		<fileset dir="${antlr.grammars.dir}">
		    			<include name="*.g"/>
					</fileset>
		    	</pathconvert>
			</then></if>
			<echo>${antlr.grammars}</echo>
		</sequential>
	</macrodef>
		
	<macrodef name="generate-antlr"   description="Compile a ANTLR grammar">
		<attribute name="package"  description="The package" default="fr.inria.phoenix.${project.name.lowercase}.parser"/>
		<sequential>
			<antlr-generate-dir package="@{package}"/>
		   
			<delete verbose="true">
				<fileset dir="${antlr.grammars.dir}">
					<include name="*.tokens" />
				</fileset>
			</delete>
			<java classname="org.antlr.Tool" classpath="${libs.dir}/external/antlr-3.2.jar" failonerror="yes">
				<arg value="-fo" />
				<arg path="${antlr.generated}" />
				<arg value="-lib" />
				<arg path="${antlr.grammars.dir}" />
				<arg value="-verbose" />
				<arg line="${antlr.grammars}" />
			</java>
			<move todir="${antlr.grammars.dir}">
				<fileset dir="${antlr.generated}">
					<include name="*.tokens" />
				</fileset>
			</move>
		</sequential>
	</macrodef>
	
	<!-- Removing the framework directory -->
	<target name="~generate.fmk.clean" >
		<delete dir="${framework.dir}" />
	</target>
	
	<!-- Removing the artifacts generated by ANTLR -->
	<target name="~generate.antlr.clean">
		<if><isset property="antlr.package"/>
			<then>
				<antlr-generate-dir package="${antlr.package}"/>
				<delete verbose="true">
					<fileset dir="${antlr.grammars.dir}">
						<include name="*.tokens" />
					</fileset>
				</delete>
				<delete dir="${antlr.generated}"/>
			</then>
		</if>
	</target>
	
	<propertyappend property="targets.clean" value="generate.clean"/><!-- Add framework cleaning as a default target -->
	<target name="generate.clean">
		<antcall.ifexists target="~generate.${generate.type}.clean"/>
	</target>

	<!-- Generate the framework -->
	<target name="~generate.fmk">
		<for list="${generators}" delimiter=":" param="generator">
			<sequential>
				<generate-framework generator="@{generator}"/>
			</sequential>
		</for>
	</target>
	
	<!-- Generate the ANTLR artifacts -->
	<target name="~generate.antlr">
		<if><isset property="antlr.package"/>
			<then>
				<generate-antlr package="${antlr.package}"/>
			</then>
			<else>
				<fail message="Cannot generate ANTLR artifacts: antlr.package property is not setted"/>
			</else>
		</if>
	</target>
	
	
	<target name="generate" description="Generate the framework" depends="generate.clean,dependencies">
		<antcall.ifexists target="~generate.${generate.type}"/>
	</target>

</project>